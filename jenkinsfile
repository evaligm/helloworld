pipeline {
    agent {
        label "master"
    }
    tools {
        maven "Maven 3.8.1"
        dockerTool "docker-17.09.1-ce"
        jdk "jdk 9"
    }
    environment {
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "localhost:8081/nexus"
        NEXUS_REPOSITORY = "maven-nexus-repo"
        NEXUS_CREDENTIAL_ID = "nexus-user-credentials"
    }
    stages {
        stage("Clone code from VCS") {
            steps {
                script {
                     git  branch: 'main', credentialsId: 'evaligm', poll: true, changelog: true, url: 'https://github.com/evaligm/helloworld'
                }
            } // end steps
        }  // end stage
        stage("Maven Build") {
            steps {
                script {
                    sh "mvn package -DskipTests=true"
                }
            } // end steps
        }  // end stage
      	stage('Push jar file to Nexus') {
        	steps  { 
           		nexusArtifactUploader artifacts: [ [artifactId: 'HelloWorld', 
				classifier: 'debug', 
				file: 'target/HelloWorld-0.0.1-SNAPSHOT.jar', 
				type: 'jar']  ], 				
				nexusVersion: 'nexus3', 
				protocol: 'http',  
				nexusUrl: 'b5b40343f1b6:8081/nexus', 
				groupId: 'org.springframework.boot',  
				repository: 'maven-nexus-repo/', 
				credentialsId: 'nexus-user-credentials', 
				version: '2.5.4'            
            } // end step          
        } // end stage
        	
	    stage('Build docker image') {
		    steps {
                script {
                    def docImage = docker.build("evaligm/helloworldimg")
                }
		 	} // end steps
	    } // end stage


        stage("docker run ") {
            steps {
                script {                    
    		        sh "docker run -d -p 8080:8080 --rm --name helloworldcon8 evaligm/helloworldimg:latest"
                }  // end script
            } // end steps
        }  // end stage


        stage("Push to Nexus") {
            steps {
                script {                    
    		        sh "docker login --username admin --password 112233 localhost:8085"
                    sh "docker tag evaligm/helloworldimg:latest localhost:8085/helloworldimg:latest"
                    sh "docker push localhost:8085/helloworldimg:latest"
                }  // end script
            } // end steps
        }  // end stage

        stage("docker run pull image from Nexus") {
            steps {
                script {                    
    		        sh "docker run -d -p 8080:8080 --rm --name helloworldcon9 localhost:8085/helloworldimg:latest"
                }  // end script
            } // end steps
        }  // end stage

    }  //end stages
} //end pipeline